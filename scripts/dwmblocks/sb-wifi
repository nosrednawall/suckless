#!/bin/bash

# funcoes cliclaveis
case $BUTTON in
   # 1) bash ~/.dotfiles/.local/bin/dwm/toggle_wifi.sh ;;
    1) xsetroot -name "fsignal:togglescratch ui 5" ;;
    3) bash ~/.dotfiles/.local/bin/dmenu/dmenu-vpn ;;
	6) setsid -f st -e emacs -nw "$0" ;;
    8)
        myip=$(ip -f inet address | grep inet | grep -v 'lo$' | cut -d ' ' -f 6,13 && curl ifconfig.me && echo ' external ip')
        notify-send "Ips atuais" "$myip" --icon "/usr/share/icons/Numix/64/devices/network-modem.svg"
    ;;
esac

# Identifica os devices de rede do sistema
DEVICE_WIFI=$(ls /sys/class/net/ | grep "wl" | awk '{print $1}')
DEVICE_ETHERNET=$(ls /sys/class/net/ | grep "enp" | awk '{print $1}')

# Verifica se o wifi existe
if [ -e /sys/class/net/$DEVICE_WIFI/operstate ]; then

    # Verifica se o wifi esta ligado
    status_wifi=$(cat /sys/class/net/$DEVICE_WIFI/operstate | grep "up" -ic)
else
    status_wifi=0
fi

# Verifica se o ethernet existe
if [ -e /sys/class/net/$DEVICE_ETHERNET/operstate ]; then

    # Verifica se o ethernet esta ligado
    status_ethernet=$(cat /sys/class/net/$DEVICE_ETHERNET/operstate | grep "up" -ic)
else
    status_ethernet=0
fi


if [ $status_wifi -eq 1 ]; then
    if [ $status_ethernet -eq 1 ]; then
        # nesse caso eu preferi pular o primeiro resultado, e separar dois, depois pego o ultimo
        wifiname=$(nmcli -t -f NAME connection show --active | grep -E "[^Conexão cabeada 1|^lo]" | head -2 | tail -1)
    else
        wifiname=$(nmcli -t -f NAME connection show --active | grep -E "[^Conexão cabeada 1|^lo]" | head -1)
    fi

    ip=$(ip addr show $DEVICE_WIFI  | grep 'inet' | awk '{print$2}' | sed 's/\/[0-9]*//' | head -1)
    wifi="^c#b58900^ ^d^$wifiname  "
else
    wifi="^c#4A5947^󰖪  "
fi

echo "$wifi"
